pipeline {
    agent any
    def app

    stages {
        stage('Clone repository') {
            steps {
                echo 'Recuperation de la configuration'
                checkout scm
            }
        }

        stage('Build image') {
            steps {
                echo 'Construction  de l image'
                app = docker.build("atos06/ipiformation")
            }
        }

        stage('Test image') {
            parallel {

                stage('Test 1') {
                    steps {
                        echo 'Test 1 en cours ...'
                        docker.image('atos06/ipiformation').withRun('-p 80:80 --name devops') { c ->
                        sh 'docker ps'
                        sh 'docker exec devops curl localhost:80'
                        sh 'echo "Test 1 passed"'
                        }
                    }
                }
 
                stage('Test 2') {
                    steps {
                        echo' Test 2 en cours ...'
                        sh 'echo "Test 2 passed"'
                    }
                }
            }
        }

        stage('Push image') {
            echo 'Push dans le repository Github'
            docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
                app.push("${env.BUILD_NUMBER}")
                app.push("1.0")
            }
        }
    }
}